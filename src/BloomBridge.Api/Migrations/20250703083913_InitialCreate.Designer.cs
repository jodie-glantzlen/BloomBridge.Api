// <auto-generated />
using BloomBridge.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloomBridge.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250703083913_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("BloomBridge.Api.Models.PredefinedNeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PredefinedNeeds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Managing anxiety"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Dealing with depression"
                        },
                        new
                        {
                            Id = 3,
                            Label = "Processing grief and loss"
                        },
                        new
                        {
                            Id = 4,
                            Label = "Coping with stress"
                        },
                        new
                        {
                            Id = 5,
                            Label = "Building self-esteem"
                        },
                        new
                        {
                            Id = 6,
                            Label = "Managing anger"
                        },
                        new
                        {
                            Id = 7,
                            Label = "Improving relationships"
                        },
                        new
                        {
                            Id = 8,
                            Label = "Setting boundaries"
                        },
                        new
                        {
                            Id = 9,
                            Label = "Dealing with loneliness"
                        },
                        new
                        {
                            Id = 10,
                            Label = "Family conflict resolution"
                        },
                        new
                        {
                            Id = 11,
                            Label = "Social anxiety support"
                        },
                        new
                        {
                            Id = 12,
                            Label = "Better sleep habits"
                        },
                        new
                        {
                            Id = 13,
                            Label = "Nutrition and eating habits"
                        },
                        new
                        {
                            Id = 14,
                            Label = "Exercise motivation"
                        },
                        new
                        {
                            Id = 15,
                            Label = "Substance use support"
                        },
                        new
                        {
                            Id = 16,
                            Label = "Time management"
                        },
                        new
                        {
                            Id = 17,
                            Label = "Work-life balance"
                        },
                        new
                        {
                            Id = 18,
                            Label = "Career guidance"
                        },
                        new
                        {
                            Id = 19,
                            Label = "Burnout prevention"
                        },
                        new
                        {
                            Id = 20,
                            Label = "Financial stress"
                        },
                        new
                        {
                            Id = 21,
                            Label = "Finding purpose and meaning"
                        },
                        new
                        {
                            Id = 22,
                            Label = "Building confidence"
                        },
                        new
                        {
                            Id = 23,
                            Label = "Mindfulness and meditation"
                        },
                        new
                        {
                            Id = 24,
                            Label = "Emotional regulation"
                        },
                        new
                        {
                            Id = 25,
                            Label = "Personal goal setting"
                        });
                });

            modelBuilder.Entity("BloomBridge.Api.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BloomBridge.Api.Models.UserCustomNeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomText")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserCustomNeeds");
                });

            modelBuilder.Entity("BloomBridge.Api.Models.UserPredefinedNeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PredefinedNeedId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PredefinedNeedId");

                    b.HasIndex("UserId");

                    b.ToTable("UserPredefinedNeeds");
                });

            modelBuilder.Entity("BloomBridge.Api.Models.UserCustomNeed", b =>
                {
                    b.HasOne("BloomBridge.Api.Models.User", "User")
                        .WithMany("UserCustomNeeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloomBridge.Api.Models.UserPredefinedNeed", b =>
                {
                    b.HasOne("BloomBridge.Api.Models.PredefinedNeed", "PredefinedNeed")
                        .WithMany()
                        .HasForeignKey("PredefinedNeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BloomBridge.Api.Models.User", "User")
                        .WithMany("UserPredefinedNeeds")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PredefinedNeed");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BloomBridge.Api.Models.User", b =>
                {
                    b.Navigation("UserCustomNeeds");

                    b.Navigation("UserPredefinedNeeds");
                });
#pragma warning restore 612, 618
        }
    }
}
